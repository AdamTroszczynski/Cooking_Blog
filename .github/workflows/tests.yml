name: Tests

on:
  push:
    branches: '*'
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: |
          cd client
          npm install -s

    - name: Run tests
      run: |
          cd client
          npm run test:unit

  backend-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST: localhost
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create database and tables
        run: |
          psql -h localhost -U postgres -c 'CREATE DATABASE "cookingBlog_test";'
          psql -h localhost -U postgres -d cookingBlog_test -a -f server/src/sql/cookingBlogInit.sql
        env:
          PGPASSWORD: postgres

      - name: Wait for SQL Scripts to Execute
        run: sleep 5

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: |
            cd server
            npm install -s

      - name: Prepare .env.test.local
        run: |
            cd server
            touch .env.test.local
            echo PORT=8080
            echo DB_USER="postgres" >> .env.test.local
            echo DB_HOST="localhost" >> .env.test.local
            echo DB_NAME="cookingBlog_test" >> .env.test.local
            echo DB_PASSWORD="postgres" >> .env.test.local
            echo DB_PORT=5432 >> .env.test.local

      - name: Start backend service (API)
        run: |
            cd server
            (npm run start&)

      - name: Wait for Backend to Start
        run: sleep 10

      - name: Run Tests
        run: |
            cd server
            npm test
